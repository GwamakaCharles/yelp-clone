{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["Business","react_default","a","createElement","className","src","this","props","business","imageSrc","alt","name","address","city","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","key","id","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","sortByOptions","Best Match","Highest Rated","Most Reviewed","sortByOption","setState","e","target","value","searchYelp","preventDefault","_this2","keys","sortByOptionValue","onClick","handleSortByChange","getSortByClass","renderSortByOptions","onChange","placeholder","Yelp","fetch","concat","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aeab2476.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Business.css\";\n\nclass Business extends React.Component {\n  render() {\n    return (\n      <div className=\"Business\">\n        <div className=\"image-container\">\n          <img src={this.props.business.imageSrc} alt=\"\" />\n        </div>\n        <h2>{this.props.business.name}</h2>\n        <div className=\"Business-information\">\n          <div className=\"Business-address\">\n            <p>{this.props.business.address}</p>\n            <p>{this.props.business.city}</p>\n            <p>{this.props.business.zipCode}</p>\n          </div>\n          <div className=\"Business-reviews\">\n            <h3>{this.props.business.category}</h3>\n            <h3 className=\"rating\">{this.props.business.rating}</h3>\n            <p>{this.props.business.reviewCount} Reviews</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Business;\n","import React, { Component } from 'react';\nimport './BusinessList.css';\nimport Business from '../Business/Business';\n\nclass BusinessList extends Component {\n    render() {\n        return(\n            <div className='business-list'>\n                { this.props.businesses.map(business => {\n                        return <Business key={business.id} business={business} />\n                    })}\n            </div>\n        );\n    }\n}\nexport default BusinessList;\n","import React, { Component } from \"react\";\nimport \"./SearchBar.css\";\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: \"\",\n      location: \"\",\n      sortBy: \"best_match\"\n    };\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.sortByOptions = {\n      \"Best Match\": \"best_match\",\n      \"Highest Rated\": \"rating\",\n      \"Most Reviewed\": \"review_count\"\n    };\n  }\n\n  getSortByClass(sortByOption) {\n    if (this.state.sortBy === sortByOption) {\n      return \"active\";\n    }\n    return \"\";\n  }\n\n  handleSortByChange(sortByOption) {\n    this.setState({\n      sortBy: sortByOption\n    });\n  }\n\n  handleTermChange(e) {\n    this.setState({\n      term: e.target.value\n    });\n  }\n\n  handleLocationChange(e) {\n    this.setState({\n      location: e.target.value\n    });\n  }\n\n  handleSearch(e) {\n    this.props.searchYelp(\n      this.state.term,\n      this.state.location,\n      this.state.sortBy\n    );\n    e.preventDefault();\n  }\n\n  renderSortByOptions() {\n    return Object.keys(this.sortByOptions).map(sortByOption => {\n      let sortByOptionValue = this.sortByOptions[sortByOption];\n      return (\n        <li\n          onClick={this.handleSortByChange.bind(this, sortByOptionValue)}\n          className={this.getSortByClass(sortByOptionValue)}\n          key={sortByOptionValue}\n        >\n          {sortByOption}\n        </li>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <div className=\"SearchBar-sort-options\">\n          <ul>{this.renderSortByOptions()}</ul>\n        </div>\n        <div className=\"SearchBar-fields\">\n          <input\n            onChange={this.handleTermChange}\n            placeholder=\"Search Businesses\"\n          />\n          <input onChange={this.handleLocationChange} placeholder=\"Where?\" />\n        </div>\n        <div onClick={this.handleSearch} className=\"SearchBar-submit\">\n          <a>Let's Go</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","const apiKey =\n  \"HeEf5ujS52b8UhWBh0s9HcdGSWa7byiM20dPoSPgf1qT-JYB-J0VNl62ZpyRrFFhbOry2j20EDxmKiJ0sfQ9FEWR6mNl4ybHHBh-4ttcdVkHngrrTE4jYmZ9B9fjXHYx\";\n\nconst Yelp = {\n  searchYelp(term, location, sortBy) {\n    return fetch(\n      `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,\n      {\n        headers: {\n          Authorization: `Bearer ${apiKey}`\n        }\n      }\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(jsonResponse => {\n        if (jsonResponse.businesses) {\n          return jsonResponse.businesses.map(business => {\n            return {\n              id: business.id,\n              imageSrc: business.image_url,\n              name: business.name,\n              address: business.location.address1,\n              city: business.location.city,\n              state: business.location.state,\n              zipCode: business.location.zip_code,\n              category: business.categories[0].title,\n              rating: business.rating,\n              reviewCount: business.review_count\n            };\n          });\n        }\n      });\n  }\n};\nexport default Yelp;\n","import React from 'react';\nimport './App.css';\nimport BusinessList from './components/BusinessList/BusinessList';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport Yelp from '../src/util/Yelp';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses: []\n    }\n    this.searchYelp = this.searchYelp.bind(this);  \n  }\n\n  searchYelp(term, location, sortBy) {\n    Yelp.searchYelp(term, location, sortBy).then((businesses) => {\n      this.setState({\n        businesses: businesses\n      })\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App\">\n          <h1>ravenous</h1>\n          <SearchBar searchYelp={this.searchYelp} />\n          <BusinessList businesses={this.state.businesses} /> \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}